<?xml version="1.0" encoding="UTF-8"?>

<schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:fn="http://www.w3.org/2005/xpath-functions"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:dfdlx="http://www.ogf.org/dfdl/dfdl-1.0/extensions"
  xmlns:p="urn:pairstransform"
  targetNamespace="urn:pairstransform"
  elementFormDefault="unqualified">

  <include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

  <!--
  First we transform the input data into XML using DFDL
  -->

  <annotation>
    <appinfo source="http://www.ogf.org/dfdl/">

      <dfdl:format ref="p:GeneralFormat" lengthKind="delimited"
        textNumberPattern="#0.00000"
        dfdlx:parseUnparsePolicy="parseOnly" />

      <dfdl:defineFormat name="array1">
        <dfdl:format occursCountKind="expression"
                     occursCount="{ ../count }"
                     terminator="%NL;"/>
      </dfdl:defineFormat>

    </appinfo>
  </annotation>

  <element name="latLonLists">
    <annotation><documentation>
      Physical representation described using DFDL.
    </documentation></annotation>
    <complexType>
      <sequence>
        <sequence dfdl:hiddenGroupRef="p:count"/>
        <element name="listLat" type="float" minOccurs="0" maxOccurs="unbounded"
                    dfdl:ref="p:array1"/>
        <element name="listLon" type="float" minOccurs="0" maxOccurs="unbounded"
                    dfdl:ref="p:array1"/>
      </sequence>
    </complexType>
  </element>

  <group name="count">
    <sequence>
      <element name="count" type="unsignedInt"
                  dfdl:terminator="%NL;"/>
    </sequence>
  </group>

  <!--
  Next we transform that pair of lists, into a list of pairs
  -->

  <group name="latLonLists">
    <sequence>
      <element ref="p:latLonLists"/>
    </sequence>
  </group>

  <element name="latLonPairs">
    <complexType>
      <sequence>
        <sequence dfdl:hiddenGroupRef="p:latLonLists"/>
        <element name="pair" minOccurs="1" maxOccurs="unbounded"
                    dfdl:occursCountKind="expression"
                    dfdl:occursCount="{ fn:count(../p:latLonLists/listLat) }">
          <complexType>
            <sequence>
              <element name="lat" type="float"
                          dfdl:inputValueCalc="{ ../../p:latLonLists/listLat[dfdl:occursIndex()] }"/>
              <element name="lon" type="float"
                          dfdl:inputValueCalc="{ ../../p:latLonLists/listLon[dfdl:occursIndex()] }"/>
            </sequence>
          </complexType>
        </element>
      </sequence>
    </complexType>
  </element>

  <!--
  Then we transform into a list of lat/lon pairs with a N-E-S-W syntax.
  -->

  <group name="latLonPairs">
    <sequence>
      <element ref="p:latLonPairs"/>
    </sequence>
  </group>

  <annotation>
    <appinfo source="http://www.ogf.org/dfdl/">
      <dfdl:defineVariable name="lat" type="float"/>
      <dfdl:defineVariable name="latDir" type="string"/>
      <dfdl:defineVariable name="lon" type="float"/>
      <dfdl:defineVariable name="lonDir" type="string"/>
    </appinfo>
  </annotation>

  <element name="neswPoints">
    <complexType>
      <sequence>
        <sequence dfdl:hiddenGroupRef="p:latLonPairs"/>
        <element name="nesw" minOccurs="1" maxOccurs="unbounded"
                    dfdl:occursCountKind="expression"
                    dfdl:occursCount='{ fn:count(../p:latLonPairs/pair) }'>
          <complexType>
            <sequence>
              <annotation>
                <appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:newVariableInstance ref="p:lat" defaultValue='{ ../p:latLonPairs/pair[dfdl:occursIndex()]/lat }'/>
                  <dfdl:newVariableInstance ref="p:latDir" defaultValue='{ if ($p:lat ge 0) then "N" else "S" }'/>
                  <dfdl:newVariableInstance ref="p:lon" defaultValue='{ ../p:latLonPairs/pair[dfdl:occursIndex()]/lon }'/>
                  <dfdl:newVariableInstance ref="p:lonDir" defaultValue='{ if ($p:lon ge 0) then "E" else "W" }'/>
                </appinfo>
              </annotation>
              <element name="loc" type="string"
                dfdl:inputValueCalc='{ fn:concat($p:latDir, " ", fn:abs($p:lat), ", ", $p:lonDir, " ", fn:abs($p:lon)) }'/>
            </sequence>
          </complexType>
        </element>
      </sequence>
    </complexType>
  </element>

</schema>
