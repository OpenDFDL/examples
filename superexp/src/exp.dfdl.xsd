<?xml version="1.0" encoding="UTF-8"?>

<schema
  xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:fn="http://www.w3.org/2005/xpath-functions"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:ex="urn:example.com"
  targetNamespace="urn:example.com"
  elementFormDefault="unqualified"
  xmlns:dfdlx="http://www.ogf.org/dfdl/dfdl-1.0/extensions">

  <include schemaLocation="/org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

  <annotation>
    <appinfo source="http://www.ogf.org/dfdl/">
      <dfdl:format
        ref="ex:GeneralFormat"
        representation="binary"
        lengthUnits="bits"
        alignmentUnits="bits"
        alignment="1"
        dfdlx:parseUnparsePolicy="parseOnly"/>
    </appinfo>
  </annotation>

  <!--
  The size of the infoset for element e here will be O(2<sup>s</sup> * n)
  where s is the size of the schema
  -->

  <element name="e">
    <complexType>
      <sequence>
        <element name="a" maxOccurs="unbounded">
          <complexType>
            <sequence>
              <element name="bit" type="xs:unsignedInt" dfdl:lengthKind="explicit" dfdl:length="1"/>
              <element name="big" type="ex:bigFanout"/>
            </sequence>
          </complexType>
        </element>
      </sequence>
    </complexType>
  </element>

    <complexType name="bigFanout">
      <sequence>
        <group ref="ex:g1"/>
        <group ref="ex:g1"/>
      </sequence>
    </complexType>

  <group name="g1">
    <sequence>
      <group ref="ex:g2"/>
      <group ref="ex:g2"/>
    </sequence>
  </group>

  <group name="g2">
    <sequence>
      <group ref="ex:g3"/>
      <group ref="ex:g3"/>
    </sequence>
  </group>

  <!--
  At this point it should be clear that in a schema of size s, I can
  extend this fan-out to have s levels g1 to gs, each doubles the size of the
  infoset, hence, the schema is _O(s)_ in size, but the infoset is _O(2^s)_

  This is still _finite_, it is just unnecessarily large in the sense that
  a data format doesn't require this much expansion capability to describe
  any data format.
  -->

  <group name="g3">
    <sequence>
      <element name="d" type="xs:unsignedInt" default="1"/>
    </sequence>
  </group>

</schema>
